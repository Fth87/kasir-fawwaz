// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview AI-powered recommendations on how to adjust service prices based on recorded expenses and sales data.
 *
 * - recommendPriceAdjustments - A function that handles the price adjustment recommendation process.
 * - RecommendPriceAdjustmentsInput - The input type for the recommendPriceAdjustments function.
 * - RecommendPriceAdjustmentsOutput - The return type for the recommendPriceAdjustments function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RecommendPriceAdjustmentsInputSchema = z.object({
  expenses: z
    .number()
    .describe('Total expenses for the period, in the local currency.'),
  salesData: z
    .string()
    .describe(
      'Sales data for the period, including service types and revenue generated.'
    ),
  currentPrices: z
    .string()
    .describe('A list of services and their current prices.'),
});
export type RecommendPriceAdjustmentsInput = z.infer<
  typeof RecommendPriceAdjustmentsInputSchema
>;

const RecommendPriceAdjustmentsOutputSchema = z.object({
  recommendations: z
    .string()
    .describe(
      'AI-powered recommendations on how to adjust service prices to optimize profitability.'
    ),
  reasoning: z
    .string()
    .describe(
      'The reasoning behind the price adjustment recommendations, considering expenses and sales data.'
    ),
});
export type RecommendPriceAdjustmentsOutput = z.infer<
  typeof RecommendPriceAdjustmentsOutputSchema
>;

export async function recommendPriceAdjustments(
  input: RecommendPriceAdjustmentsInput
): Promise<RecommendPriceAdjustmentsOutput> {
  return recommendPriceAdjustmentsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'recommendPriceAdjustmentsPrompt',
  input: {schema: RecommendPriceAdjustmentsInputSchema},
  output: {schema: RecommendPriceAdjustmentsOutputSchema},
  prompt: `You are a pricing strategy expert for small businesses. Analyze the provided data and provide recommendations on how to adjust service prices to improve profitability.

Expenses: {{{expenses}}}
Sales Data: {{{salesData}}}
Current Prices: {{{currentPrices}}}

Provide clear and actionable recommendations, along with the reasoning behind them. Consider factors such as market demand, competition, and cost of service delivery. Focus on optimizing pricing to maximize revenue and profitability.

Your recommendations should be specific and include suggested price adjustments for each service.

Ensure that the reasoning clearly explains why these adjustments are recommended based on the data provided.`,
});

const recommendPriceAdjustmentsFlow = ai.defineFlow(
  {
    name: 'recommendPriceAdjustmentsFlow',
    inputSchema: RecommendPriceAdjustmentsInputSchema,
    outputSchema: RecommendPriceAdjustmentsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
